@model NewDealWithCustomerModel
@using SynWebCRM.Contract.Models
@using SynWebCRM.Web.Models

@{
    ViewBag.Title = "Новый заказ!";
}



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="row">
        <div class="col-md-6">

            <div class="form-horizontal">
                <h4>Клиент</h4>
                <hr />
                <div class="form-group">
                    @Html.LabelFor(model => model.Customer.CreationDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Customer.CreationDate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Customer.CreationDate, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Customer.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Customer.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Customer.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Customer.Source, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @*@Html.DropDownListFor(model => model.Source, Html.GetEnumSelectList<SynWebCRM.Data.CustomerSource>(), htmlAttributes: new { @class = "form-control" })*@

                        <select asp-for="Customer.Source" class="form-control" asp-items="@(Html.GetEnumSelectList<SynWebCRM.Contract.Models.CustomerSource>())"></select>

                        @Html.ValidationMessageFor(model => model.Customer.Source, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Customer.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Customer.Description, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Customer.Description, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Customer.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Customer.Phone, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Customer.Phone, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Customer.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Customer.Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Customer.Email, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Customer.VkId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Customer.VkId, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Customer.VkId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Customer.NeedsAttention, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Customer.NeedsAttention, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Customer.NeedsAttention, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            
            
        </div>
        <div class="col-md-6">
            <div class="form-horizontal">
                <h4>Заявка</h4>
                <hr />
                <div class="form-group">
                    @Html.LabelFor(model => model.Deal.CreationDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Deal.CreationDate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Deal.CreationDate, "", new { @class = "text-danger" })
                    </div>
                </div>
        
        

                <div class="form-group">
                    @Html.LabelFor(model => model.Deal.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Deal.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Deal.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Deal.ServiceTypeId, htmlAttributes: new {@class = "control-label col-md-2"})
                    <div class="col-md-10">
                        @Html.DropDownList("ServiceTypeId", null, htmlAttributes: new {@class = "form-control"})
                        @Html.ValidationMessageFor(model => model.Deal.ServiceTypeId, "", new {@class = "text-danger"})
                    </div>
                </div>


                <div class="form-group">
                    @Html.LabelFor(model => model.Deal.Sum, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Deal.Sum, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Deal.Sum, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Deal.Profit, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Deal.Profit, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Deal.Profit, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Deal.Type, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <select asp-for="Deal.Type" class="form-control" asp-items="@(Html.GetEnumSelectList<DealType>())"></select>
                        @*@Html.DropDownList("Type", EnumHelper.GetSelectList(typeof(DealType), DealType.Incoming), new { @class = "form-control" })*@
                        @Html.ValidationMessageFor(model => model.Deal.Type, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Deal.DealStateId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("DealStateId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Deal.DealStateId, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Deal.NeedsAttention, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Deal.NeedsAttention, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Deal.NeedsAttention, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Deal.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.Deal.Description, new { @class = "form-control" } )
                        @Html.ValidationMessageFor(model => model.Deal.Description, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Создать" class="btn btn-default" />
        </div>
    </div>
}